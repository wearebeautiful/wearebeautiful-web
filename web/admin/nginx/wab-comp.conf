user                 nginx;
error_log            /var/log/nginx/wab-comp.error.log debug;
worker_processes     300;
worker_rlimit_nofile 8192;

events {
        worker_connections  1024;
}

http {

    include          mime.types;
    proxy_cache_path /cache levels=1:2 keys_zone=wab:5m max_size=50g inactive=999d use_temp_path=off;
    add_header       X-Cache-Status $upstream_cache_status;
    log_format       main '$http_x_real_ip - $remote_user [$time_local] ' '"$request" $status $body_bytes_sent "$http_referer" ' '"$http_user_agent"' ;
    log_format       detail '$http_x_forwarded_for - $remote_user [$time_local] ' '"$request" $status $body_bytes_sent "$http_referer" ' '"$http_user_agent" ' '"$request_time"';

    map $time_iso8601 $year {
        default '0000';
        "~^(\d{4})-(\d{2})-(\d{2})" $1;
    }
    map $time_iso8601 $month {
        default '00';
        "~^(\d{4})-(\d{2})-(\d{2})" $2;
    }
    map $time_iso8601 $day {
        default '00';
        "~^(\d{4})-(\d{2})-(\d{2})" $3;
    }

    server {
        listen                 80;
        server_name            _;
	add_header             X-WAB web-comp always;
        sendfile               on;
        sendfile_max_chunk     1m;

        access_log             /var/log/nginx/wab-comp.access.$year-$month-$day.log  detail;

        location ~^/model/m/(?<model>.+(?:\.stl(?:.gz)?))$ {
            alias             /models/$model;
            gunzip            on;
            gzip_static       on;
            add_header        content-type model/stl;
            add_header        Cache-Control "private";
            expires           1h;
        }
        location ~^/model/d/(?<model>.+(?:\.stl(?:.gz)?))$ {
            alias             /models/$model;
            gunzip            on;
            gzip_static       on;
            add_header        content-type model/stl;
            add_header        Cache-Control "private";
            expires           1h;
        }

        location /static/ {
            root                     /code/wearebeautiful.info/;
            gunzip                   on;
            gzip_static              on;
            gzip_http_version        1.0;
            open_file_cache          max=10000 inactive=5m;
            open_file_cache_valid    2m;
            open_file_cache_min_uses 1;
            open_file_cache_errors   on;
            add_header Cache-Control "public";
            expires                  1d;
        }

        location /favicon.ico {
            return 404;
        } 

        location / {
            # Enable Gzip
            gzip  on;
            gzip_http_version 1.0;
            gzip_comp_level 6;
            gzip_min_length 1100;
            gzip_buffers 16 8k;
            gzip_proxied any;
            gzip_types
                # text/html is always compressed by HttpGzipModule
                application/javascript
                application/json
                application/rss+xml
                application/vnd.ms-fontobject
                application/xml
                font/opentype
                font/truetype
                image/svg+xml
                text/css
                text/javascript
                text/plain
                text/x-component
                text/xml
            ;
            gzip_static on;

            gzip_proxied    expired no-cache no-store private auth;
            gzip_disable    "MSIE [1-6]\.";
            gzip_vary       on;

            proxy_pass         http://wab-web:3031;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   Accept-Encoding "gzip";
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            proxy_cache wab;
            proxy_cache_revalidate on;
            proxy_cache_valid      200 304 404 999d;
            proxy_ignore_headers   Cache-Control;
        }
    }
}
